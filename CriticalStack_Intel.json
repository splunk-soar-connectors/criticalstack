{
    "appid": "9b4ee392-1a84-41ff-9e47-547f7740cece",
    "name": "CriticalStack Intel",
    "description": "This app integrates with the CriticalStack feed to implement investigative actions",
    "publisher": "AvantGarde Partners",
    "package_name": "phantom_criticalstack",
    "type": "information",
    "license": "Copyright (c) AvantGarde Partners 2017-2019",
    "main_module": "CriticalStack_Intel_connector.pyc",
    "app_version": "1.0.6",
    "utctime_updated": "2018-01-13T01:26:59.000000Z",
    "product_vendor": "CriticalStack",
    "product_name": "CriticalStack Intel",
    "product_version_regex": ".*",
    "min_phantom_version": "4.2.7532",
    "logo": "logo_criticalstack.svg",
    "logo_dark": "logo_criticalstack_dark.svg",
    "uber_view": "CriticalStack_Intel_view.all_results",
    "configuration": {
        "criticalStackServer": {
            "description": "CriticalStack Client Location (IP/hostname)",
            "data_type": "string",
            "required": true,
            "order": 0
        },
        "sshUser": {
            "description": "CriticalStack SSH User",
            "data_type": "string",
            "required": true,
            "order": 1
        },
        "sshPassword": {
            "description": "CriticalStack SSH Password",
            "data_type": "password",
            "required": true,
            "order": 2
        },
        "criticalStackPrefix": {
            "description": "CriticalStack List Prefix",
            "data_type": "string",
            "required": true,
            "order": 3
        },
        "criticalStackApiKey": {
            "description": "CriticalStack API Key",
            "data_type": "password",
            "required": true,
            "order": 4
        },
        "criticalStackFileLoc": {
            "description": "Critical Stack master-public.bro.dat Location",
            "data_type": "string",
            "required": true,
            "default": "/opt/critical-stack/frameworks/intel/master-public.bro.dat",
            "order": 5
        },
        "verifyPhantomServerCert": {
            "description": "Verify Phantom Server Certificate",
            "data_type": "boolean",
            "required": false,
            "order": 6
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "description": "Validate connectivity to CriticalStack",
            "verbose": "<p><strong>Details:</strong></p><ul><li>Validates connectivity to the host on which the CriticalStack client is installed.</li><li>Validates the ability to perform CriticalStack 'list' command on CriticalStack host.</li><li>Validates connectivity to Phantom API.</li></ul>",
            "type": "test",
            "identifier": "test_connectivity",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "ip reputation",
            "description": "Checks IP against CriticalStack IP lists",
            "type": "investigate",
            "identifier": "ip_reputation",
            "read_only": true,
            "parameters": {
                "ip": {
                    "description": "IP address to investigate",
                    "contains": [
                        "ip"
                    ],
                    "primary": true,
                    "data_type": "string",
                    "required": true
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.ip",
                    "data_type": "string",
                    "contains": [
                        "ip"
                    ],
                    "example_values": [
                        "1.1.1.1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ip",
                    "data_type": "string",
                    "contains": [
                        "ip"
                    ],
                    "example_values": [
                        "1.1.1.1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.source",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.additional_details",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.detected_ip_count",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.summary.list_prefix",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.lists_updated",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "domain reputation",
            "description": "Checks domain against CriticalStack domain lists",
            "type": "investigate",
            "identifier": "domain_reputation",
            "read_only": true,
            "parameters": {
                "domain": {
                    "description": "Domain to investigate",
                    "contains": [
                        "domain"
                    ],
                    "primary": true,
                    "data_type": "string",
                    "required": true
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.domain",
                    "data_type": "string",
                    "contains": [
                        "domain"
                    ],
                    "example_values": [
                        "test.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.domain",
                    "data_type": "string",
                    "contains": [
                        "domain"
                    ],
                    "example_values": [
                        "test.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.source",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.additional_details",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.detected_domain_count",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.summary.list_prefix",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.lists_updated",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "file reputation",
            "description": "Checks file against CriticalStack file hashes",
            "type": "investigate",
            "identifier": "file_reputation",
            "read_only": true,
            "parameters": {
                "hash": {
                    "description": "File hash to investigate",
                    "contains": [
                        "hash",
                        "sha256",
                        "sha1",
                        "md5"
                    ],
                    "primary": true,
                    "data_type": "string",
                    "required": true
                }
            },
            "render": {
                "type": "custom",
                "width": 10,
                "height": 5,
                "view": "CriticalStack_Intel_view.all_results",
                "title": "FILE REPUTATION"
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.hash",
                    "data_type": "string",
                    "contains": [
                        "hash",
                        "sha256",
                        "sha1",
                        "md5"
                    ],
                    "example_values": [
                        "ef7cd49899f81750f3f7c4619bb1e51c82e0d66c"
                    ]
                },
                {
                    "data_path": "action_result.data.*.hash",
                    "data_type": "string",
                    "contains": [
                        "hash",
                        "sha256",
                        "sha1",
                        "md5"
                    ],
                    "example_values": [
                        "ef7cd49899f81750f3f7c4619bb1e51c82e0d66c"
                    ]
                },
                {
                    "data_path": "action_result.data.*.source",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.additional_details",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.detected_hash_count",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.summary.list_prefix",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.lists_updated",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)"
        }
    ],
    "pip_dependencies": {
        "wheel": [
            {
                "module": "certifi",
                "input_file": "wheels/certifi-2021.10.8-py2.py3-none-any.whl"
            },
            {
                "module": "chardet",
                "input_file": "wheels/chardet-3.0.4-py2.py3-none-any.whl"
            },
            {
                "module": "enum34",
                "input_file": "wheels/enum34-1.1.10-py2-none-any.whl"
            },
            {
                "module": "idna",
                "input_file": "wheels/idna-2.10-py2.py3-none-any.whl"
            },
            {
                "module": "ipaddress",
                "input_file": "wheels/ipaddress-1.0.23-py2.py3-none-any.whl"
            },
            {
                "module": "paramiko",
                "input_file": "wheels/paramiko-2.7.2-py2.py3-none-any.whl"
            },
            {
                "module": "pycparser",
                "input_file": "wheels/pycparser-2.21-py2.py3-none-any.whl"
            },
            {
                "module": "requests",
                "input_file": "wheels/requests-2.25.0-py2.py3-none-any.whl"
            },
            {
                "module": "six",
                "input_file": "wheels/six-1.16.0-py2.py3-none-any.whl"
            },
            {
                "module": "urllib3",
                "input_file": "wheels/urllib3-1.26.7-py2.py3-none-any.whl"
            }
        ]
    }
}
